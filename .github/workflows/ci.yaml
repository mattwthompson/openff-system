name: ci

on:
  push:
    branches:
      - "master"
      - "maintenance/.+"
  pull_request:
    branches:
      - "master"
      - "maintenance/.+"
  schedule:
      - cron: "0 0 * * * "

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: [3.6, 3.7]
    env:
      CI_OS: ${{ matrix.cfg.os }}
      PYVER: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Fix conda permissions in MacOS
      shell: bash
      if: startsWith(matrix.cfg.os, 'macOS')
      run: |
        sudo chown -R $(id -u):$(id -g) ${CONDA}

    - name: Configure conda
      shell: bash
      run: |
        . devtools/gh-actions/initialize_conda.sh
        conda activate
        conda config --set always_yes yes
        conda install --quiet conda conda-build jinja2 anaconda-client
        conda update --all
        conda list

    - name: Create environment for package
      shell: bash
      run: |
        . devtools/github-actions/initialize_conda.sh
        conda activate
        conda info
        python devtools/scripts/create_conda_env.py -n=test -p=$PYVER devtools/conda-envs/test_env.yaml

    - name: Install package
      shell: bash
      run: |
        . devtools/github-actions/initialize_conda.sh
        conda activate test
        python -m pip install . --no-deps
        conda list --show-channel-urls

    - name: Run tests
      shell: bash
      run: |
        . devtools/github-actions/initialize_conda.sh
        conda activate test
        pytest -v

    - name: CodeCov
      uses: codecov/codecov-action@v1
